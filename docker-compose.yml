version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - POSTGRES_URL=postgres:5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=AllRide2024!
      - POSTGRES_DB=allride
      - MEMCACHED_ENDPOINT=memcached:11211
      - SQS_QUEUE_URL=http://localstack:4566/000000000000/allride-main-queue
      - SQS_DLQ_URL=http://localstack:4566/000000000000/allride-dlq
    depends_on:
      postgres:
        condition: service_healthy
      memcached:
        condition: service_started
      localstack:
        condition: service_healthy

  postgres:
    image: postgres:17.1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=AllRide2024!
      - POSTGRES_DB=allride
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  memcached:
    image: memcached:1.6
    ports:
      - "11211:11211"

  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=sqs
      - DEFAULT_REGION=${AWS_REGION:-us-east-1}
      - AWS_DEFAULT_REGION=${AWS_REGION:-us-east-1}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - INIT_SCRIPTS_PATH=/etc/localstack/init/ready.d
      - EXTRA_CORS_ALLOWED_ORIGINS=*
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - EAGER_SERVICE_LOADING=1
      - SQS_QUEUE_MAIN=allride-main-queue
      - SQS_QUEUE_DLQ=allride-dlq
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: 